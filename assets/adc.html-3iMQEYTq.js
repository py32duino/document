import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as n,c as e,e as s}from"./app-fbiCp83H.js";const i={},o=s(`<p>ADC ，即analog to digital converter（模数转换器）是一种非常常见的外设，用于将电压等模拟信号转换为数字形式，以便微控制器可以读取和处理。</p><p>ADC 在控制和监控应用中非常有用，因为大多数传感器（例如温度、压力、力）都会产生模拟输出电压。</p><div class="hint-container note"><p class="hint-container-title">注</p><p>每个 MCU 或模块都有不同数量的 ADC，以及不同数量的可用通道和引脚。有关详细信息，请参阅每个板的数据手册。</p></div><h2 id="adc-通用-api" tabindex="-1"><a class="header-anchor" href="#adc-通用-api" aria-hidden="true">#</a> ADC 通用 API</h2><h3 id="analogread" tabindex="-1"><a class="header-anchor" href="#analogread" aria-hidden="true">#</a> analogRead</h3><p>此函数用于获取给定引脚/ADC 通道的 ADC 原始值。</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">uint32_t</span> <span class="token function">analogRead</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span> pin<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>pin</code> GPIO 引脚或 ADC 通道。</li><li><ul><li>ADC的内部通道可以为<code>ATEMP</code> (内部温度传感器)、<code>AVBAT</code> (VBAT电压)、<code>AREF</code> (内部参考电压)。</li></ul></li></ul><p>该函数将返回模拟原始值。</p><p>读取内部通道时需要最小 ADC 采样时间，因此默认将其设置为最大可能值。它可以通过定义更精确地定义：</p><ul><li><code>ADC_SAMPLINGTIME_INTERNAL</code> 到所需的 ADC 采样时间。</li></ul><p><code>ADC_SAMPLINGTIME</code> 和 <code>ADC_CLOCK_DIV</code> 也可以通过变体或使用 build_opt.h 重新定义。</p><h3 id="analogreference" tabindex="-1"><a class="header-anchor" href="#analogreference" aria-hidden="true">#</a> analogReference</h3><p>配置模拟输入所用的基准电压（即用作输入范围上限的值）。保留此功能只是为了与现有的基于 AVR 的 API 兼容。</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">analogReference</span><span class="token punctuation">(</span>eAnalogReference ulMode<span class="token punctuation">)</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="py32duino-专用-api" tabindex="-1"><a class="header-anchor" href="#py32duino-专用-api" aria-hidden="true">#</a> PY32Duino 专用 API</h2><h3 id="analogreadresolution" tabindex="-1"><a class="header-anchor" href="#analogreadresolution" aria-hidden="true">#</a> analogReadResolution</h3><p>此函数用于设置 ADC 读取的分辨率。默认为 10 位（范围为 0 至 1023）。</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">analogReadResolution</span><span class="token punctuation">(</span><span class="token keyword">uint8_t</span> bits<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="analogreadmillivolts" tabindex="-1"><a class="header-anchor" href="#analogreadmillivolts" aria-hidden="true">#</a> analogReadMillivolts</h3><p>此函数用于获取给定引脚上的实际电压值（单位为毫伏）。</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">uint32_t</span> <span class="token function">analogReadMillivolts</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span> ulPin<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>ulPin</code> GPIO 引脚</li></ul><p>该函数将返回模拟电压值。</p><h3 id="analogreadtempsensor" tabindex="-1"><a class="header-anchor" href="#analogreadtempsensor" aria-hidden="true">#</a> analogReadTempSensor</h3><p>此函数用于获取内部温度传感器的实际温度值（单位为摄氏度）。</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">uint32_t</span> <span class="token function">analogReadTempSensor</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该函数将返回模拟温度值。</p><h3 id="analogreadvref" tabindex="-1"><a class="header-anchor" href="#analogreadvref" aria-hidden="true">#</a> analogReadVref</h3><p>此函数用于获取内部参考电压的实际电压值（单位为毫伏）。</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">uint32_t</span> <span class="token function">analogReadVref</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该函数将返回模拟电压值。</p>`,32),p=[o];function d(c,l){return n(),e("div",null,p)}const u=a(i,[["render",d],["__file","adc.html.vue"]]);export{u as default};
