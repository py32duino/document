import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as n,c as e,e as s}from"./app-fbiCp83H.js";const i={},t=s(`<p>PWM，即Pulse Width Modulation（脉宽调制）是是利用微处理器的数字输出来对模拟电路进行控制的一种非常有效的技术，广泛应用在测量、通信、工控等方面。</p><h2 id="pwm-通用-api" tabindex="-1"><a class="header-anchor" href="#pwm-通用-api" aria-hidden="true">#</a> PWM 通用 API</h2><h3 id="analogwrite" tabindex="-1"><a class="header-anchor" href="#analogwrite" aria-hidden="true">#</a> analogWrite</h3><p>此函数用于设置 PWM 输出的占空比</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">analogWrite</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span> ulPin<span class="token punctuation">,</span> <span class="token keyword">uint32_t</span> ulValue<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>ulPin</code>：要设置的 PWM 输出引脚</li><li><code>ulValue</code>：占空比</li></ul><h2 id="py32duino-专用-api" tabindex="-1"><a class="header-anchor" href="#py32duino-专用-api" aria-hidden="true">#</a> PY32Duino 专用 API</h2><h3 id="analogwritefrequency" tabindex="-1"><a class="header-anchor" href="#analogwritefrequency" aria-hidden="true">#</a> analogWriteFrequency</h3><p>此函数用于设置 <code>analogWrite()</code> 使用的频率。默认值为 <code>PWM_FREQUENCY (1000)</code>，单位为赫兹。</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">analogWriteFrequency</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span> freq<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>freq</code>：要设置的频率</li></ul><div class="hint-container note"><p class="hint-container-title">注</p><p>频率对于指定定时器的所有通道是通用的，为一个通道设置频率将影响同一定时器的所有其他通道。</p></div><h3 id="analogwriteresolution" tabindex="-1"><a class="header-anchor" href="#analogwriteresolution" aria-hidden="true">#</a> analogWriteResolution</h3><p>此函数用于设置 analogWrite 参数的分辨率。默认为 8 位（范围为 0 至 255）。</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">analogWriteResolution</span><span class="token punctuation">(</span><span class="token keyword">int</span> bits<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>bits</code>：要设置的分辨率</li></ul>`,16),o=[t];function c(l,p){return n(),e("div",null,o)}const u=a(i,[["render",c],["__file","pwm.html.vue"]]);export{u as default};
